{
   libstdc++6_Memory_leak_in_pool_constructor/https://gcc.gnu.org/bugzilla/show_bug.cgi?id=65434
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:malloc
   obj:*/libstdc++.so*
   fun:call_init.part.0
   fun:call_init
   fun:_dl_init
   obj:/lib/x86_64-linux-gnu/ld-*.so
   ...
}

{
   libstdc++ (GCC 4.9.0) implementation of std::regex has a memory leak: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=58737
   Memcheck:Leak
   match-leak-kinds: all
   ...
   fun:malloc
   ...
   fun:basic_regex<char const*>
   ...
}

{
   Ignore dlopen bug http://stackoverflow.com/questions/1542457/memory-leak-reported-by-valgrind-in-dlopen
   Memcheck:Leak
   ...
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   ...
}
{
   Ignore dlopen bug (2) http://stackoverflow.com/questions/1542457/memory-leak-reported-by-valgrind-in-dlopen
   Memcheck:Leak
   ...
   fun:_dlerror_run
   fun:dlclose
   ...
}
{
   Ignore dlopen bug - related to handling of static initialisers.
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:_dl_map_object
   fun:openaux
   fun:_dl_catch_error
   fun:_dl_map_object_deps
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   ...
}

# The following suppressions are for memcached background threads
# which are not cleanly 'joined' on shutdown; hence they have some
# allocations which are still reachable. Given there's no easy way to
# signal to these threads that the process has terminated (and they
# arn't actual "leaks") we choose suppress them.
{
   memcached_parent_monitor_thread_name
   Memcheck:Leak
   match-leak-kinds: all
   ...
   fun:cb_create_named_thread
   fun:setup_parent_monitor
   ...
}

# The following suppresion is for V8 - it doesn't free all memory
# allocated via dlopen() when the dll is unloaded.
{
   libv8 v8::internal::Isolate::EnsureDefaultIsolate reachable
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:_ZN2v88internal7Isolate20EnsureDefaultIsolateEv
   ...
   fun:_dl_init
   ...
}

# The following suppressions are for claimed 'invalid read/write'
# errors which intermittantly are reported from Valgrind 3.10.1,
# however they cannot be reproduced on demand and do not show up with
# other leak checking tools (AddressSanitizer), therefore I strongly
# believe they are false positives.
{
   mb19089 memcached Configuration::addStats invalid 1
   Memcheck:Addr1
   fun:__printf_fp
   fun:vfprintf
   fun:vsnprintf
   obj:/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21
   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_
   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd
   fun:_ZNSo9_M_insertIdEERSoT_
   fun:operator<<
   fun:_ZNK13Configuration8addStatsEPFvPKctS1_jPKvES3_
}
{
   mb19089 memcached Configuration::addStats invalid 4
   Memcheck:Addr4
   fun:__printf_fp
   fun:vfprintf
   fun:vsnprintf
   ...
   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_
   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd
   fun:_ZNSo9_M_insertIdEERSoT_
   fun:operator<<
   fun:_ZNK13Configuration8addStatsEPFvPKctS1_jPKvES3_
}
{
   mb19089 memcached Configuration::addStats invalid 8
   Memcheck:Addr8
   ...
   fun:__printf_fp
   fun:vfprintf
   fun:vsnprintf
   ...
   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_
   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd
   fun:_ZNSo9_M_insertIdEERSoT_
   fun:operator<<
   fun:_ZNK13Configuration8addStatsEPFvPKctS1_jPKvES3_
}

# libevent lock leaks. Fixed in libevent 2.1: https://github.com/libevent/libevent/issues/55
{
   libevent2.0.21_global_setup_locks_leak
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:evthread_posix_lock_alloc
   ...
   fun:event_global_setup_locks_
   fun:evthread_use_pthreads
   ...
}

# Conditional jump or move depends on uninitialised value(s)
# fixed in OpenSSL 1.0.2 according to https://rt.openssl.org/Ticket/Display.html?id=2400
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:ASN1_STRING_set
   fun:ASN1_mbstring_ncopy
   fun:ASN1_mbstring_copy
   fun:ASN1_STRING_to_UTF8
   ...
   fun:ASN1_item_ex_d2i
   ...
   fun:ASN1_item_ex_d2i
   ...
}

# ignore thread local leak in unit tests from the main thread
# http://review.couchbase.org/#/c/76854 - for details
# MB-23936: Use Threadlocal variables to accumulate stats
{
   ThreadLocal Main Thread dtor not called on exit in unit tests
   Memcheck:Leak
   ...
   fun:*EPStats*memAllocated*
   ...
   fun:RUN_ALL_TESTS
   fun:main
}

# singleton instance created inside v8
# MB-23763: couchstore v8 memory leak
{
   v8 singleton object lives till process exit
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:_Znam
   fun:_ZN2v84base16LazyInstanceImplIPNS_8internal12ElementsKindENS0_32StaticallyAllocatedInstanceTraitIS4_EENS2_34InitializeFastElementsKindSequenceENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS4_EEE12InitInstanceEPNS6_11StorageTypeE
   fun:_ZN2v84base12CallOnceImplEPlPFvPvES2_
   fun:_ZN2v88internal36GetSequenceIndexFromFastElementsKindENS0_12ElementsKindE
   fun:_ZN2v88internal24ArrayConstructorStubBase24GenerateStubsAheadOfTimeEPNS0_7IsolateE
   fun:_ZN2v88internal10CallICStub15HandleArrayCaseEPNS0_14MacroAssemblerEPNS0_5LabelE
   fun:_ZN2v88internal10CallICStub8GenerateEPNS0_14MacroAssemblerE
   fun:_ZN2v88internal16PlatformCodeStub12GenerateCodeEv
   fun:_ZN2v88internal8CodeStub7GetCodeEv
   fun:_ZN2v88internal20CallICTrampolineStub8GenerateEPNS0_14MacroAssemblerE
   fun:_ZN2v88internal16PlatformCodeStub12GenerateCodeEv
   fun:_ZN2v88internal8CodeStub7GetCodeEv
   fun:_ZN2v88internal11CodeFactory6CallICEPNS0_7IsolateEiNS0_19ConvertReceiverModeENS0_12TailCallModeE
   fun:_ZN2v88internal17FullCodeGenerator8EmitCallEPNS0_4CallENS0_19ConvertReceiverModeE
   fun:_ZN2v88internal17FullCodeGenerator18EmitCallWithLoadICEPNS0_4CallE
   fun:_ZN2v88internal17FullCodeGenerator9VisitCallEPNS0_4CallE
   fun:_ZN2v88internal17FullCodeGenerator16VisitConditionalEPNS0_11ConditionalE
   fun:_ZN2v88internal17FullCodeGenerator20VisitReturnStatementEPNS0_15ReturnStatementE
   fun:_ZN2v88internal10AstVisitor15VisitStatementsEPNS0_8ZoneListIPNS0_9StatementEEE
   fun:_ZN2v88internal17FullCodeGenerator8GenerateEv
   fun:_ZN2v88internal17FullCodeGenerator8MakeCodeEPNS0_15CompilationInfoE
   fun:_ZN2v88internal12_GLOBAL__N_123GenerateUnoptimizedCodeEPNS0_15CompilationInfoE
   fun:_ZN2v88internal8Compiler21GetSharedFunctionInfoEPNS0_15FunctionLiteralENS0_6HandleINS0_6ScriptEEEPNS0_15CompilationInfoE
   fun:_ZN2v88internal17FullCodeGenerator20VisitFunctionLiteralEPNS0_15FunctionLiteralE
}
